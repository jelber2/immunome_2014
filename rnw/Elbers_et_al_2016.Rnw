\documentclass[english]{article}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage[margin=3cm]{geometry}
\geometry{verbose,tmargin=3cm,bmargin=3cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{0}
\setcounter{tocdepth}{0}
\usepackage{url, indentfirst}
\usepackage{tabularx, booktabs, multirow, array, caption, color, longtable}
\usepackage{graphicx, fancyhdr, babel, xcolor, csquotes}
\usepackage{hyperref, lineno, setspace, pdflscape}
\usepackage[round]{natbib}
\graphicspath{ {C:/Users/jelber2/Dropbox/LSU/Dissertation/Manuscripts/immunome_2014/rnw/} }

\linenumbers
\doublespacing
\renewcommand\linenumberfont{\small\textnormal}

\title{Population genetic inferences using immune gene SNPs mirror patterns inferred by microsatellites}
\date{}
\author{\\
JEAN P. ELBERS$^{1,3}$, RACHEL W. CLOSTIO$^{2}$, SABRINA S. TAYLOR$^{1}$\\\\
$^{1}$School of Renewable Natural Resources, 227 RNR Bldg., Louisiana State University and AgCenter, \\ Baton Rouge, Louisiana, 70803, USA\\
$^{2}$Department of Biology, 300 E. St. Mary Blvd., University of Louisiana at Lafayette, \\ Lafayette, Louisiana, 70503, USA\\
Keywords: microsatellites, target enrichment, sequence capture, \\ next-generation sequencing, immunogenetics, population genomics \\\\
$^{3}$Corresponding author: Fax: 225-578-4227, Email: \underline{jean.elbers@gmail.com}\\\\
Running title: Immune gene SNPs mirror microsatellites\\\\
}

\begin{document}
<<echo=FALSE>>=
#set the working directory to find seqmetrics file
load("snps_gene_names.RData") # created using snps_gene_names.R
seqMetrics = read.table(file = "ALL-samples-recal03-baitsonly.hsmetrics.txt", header = T) #read in the sequencing metrics
seqMean = function(x){mean(seqMetrics[2:17,x])} #create function seqMean to call later
seqSD = function(x){sqrt(var(seqMetrics[2:17,x]))} #create function seqSD to call later

# calculate the number of possible immune genes
genes.possible <- read.table("ALL.gene", header=TRUE, comment.char = "#")
colnames(genes.possible)[7] <- "overlap"
genes.possible2 <- length(genes.possible$overlap)
genes.covered <- genes.possible[genes.possible$overlap != 0,]
genes.covered2 <- length(genes.covered$overlap)

# calculate the number of possible immune gene exons
exons.possible <- read.table("ALL.exon", header=TRUE, comment.char = "#")
colnames(exons.possible)[7] <- "overlap"
exons.possible2 <- length(exons.possible$overlap)
exons.covered <- exons.possible[exons.possible$overlap != 0,]
exons.covered2 <- length(exons.covered$overlap)

# calculate mean and sd number of genes per sample
genes <- read.table("gene.counts.per.sample")
genes2 <- genes$V2-2 # subtract 2 from each to account for two header lines
genes2.mean <- mean(genes2)
genes2.sd <- sd(genes2)

# calculate mean and sd number of exons per sample
exons <- read.table("exon.counts.per.sample")
exons2 <- exons$V2-2 # subtract 2 from each to account for two header lines
exons2.mean <- mean(exons2)
exons2.sd <- sd(exons2)



#FROM http://gettinggeneticsdone.blogspot.com/2014/03/visualize-coverage-exome-targeted-ngs-bedtools.html #

# Get a list of the bedtools output files you'd like to read in
files <- list.files(pattern="all.txt$")

# Split files into list <= 8 samples per list
files <- split(files,ceiling(seq_along(files)/8))

# Optional, create short sample names from the filenames. 
# For example, in this experiment, my sample filenames might look like this:
# AL102.baitcoverage.all.txt
# AL103.baitcoverage.all.txt
# This regular expression leaves me with "AL102" and "AL103" in the legend.

# for set1
labs1 <- paste("", gsub("\\.baitcoverage\\.all\\.txt", "",
                             files$'1', perl=TRUE), sep="")

labs2 <- paste("", gsub("\\.baitcoverage\\.all\\.txt", "",
                              files$'2', perl=TRUE), sep="")


# Create lists to hold coverage and cumulative coverage for each alignment,
# and read the data into these lists.
cov1 <- list()
cov2 <- list()
cov_cumul1 <- list()
cov_cumul2 <- list()

for (i in 1:length(files$`1`)) {
  cov1[[i]] <- read.table(files$`1`[i])
  cov_cumul1[[i]] <- 1-cumsum(cov1[[i]][,5])
}

for (i in 1:length(files$`2`)) {
  cov2[[i]] <- read.table(files$`2`[i])
  cov_cumul2[[i]] <- 1-cumsum(cov2[[i]][,5])
}

# Pick some colors
library(RColorBrewer)
cols1 <- brewer.pal(length(cov1), "Dark2")
cols2 <- brewer.pal(length(cov2), "Dark2")



load("hierfstat_snps_correct_R_workspace.RData") # created using hierfstat-snps-correct.R
load("hierfstat_msats_correct_R_workspace.RData") # created using hierfstat-msats-correct.R
load("power_analysis.RData")
snp.div = cbind("Site"=c("AL","FL","GA","LA"),
                "AR"=colMeans(tort.ar$Ar),
                "Ho"=colMeans(tort.div$Ho),
                "He"=colMeans(tort.div$Hs),
                "Marker"=rep("snps",4)) #create the data.frame snp.data

msat.div = cbind("Site"=c("LA","AL","GA","FL"),
                 "AR"=msat.AR,
                 "Ho"=msat.Ho,
                 "He"=msat.Hs,
                 "Marker"=rep("msats",4)) #create the data.frame msat.div
msat.div = as.data.frame(msat.div)

div.data = rbind(msat.div,snp.div)
div.data$AR <- as.numeric(levels(div.data$AR)[div.data$AR])
div.data$Ho <- as.numeric(levels(div.data$Ho)[div.data$Ho])
div.data$He <- as.numeric(levels(div.data$He)[div.data$He])

# do 1x1 linear comparisons of genetic diversity between msats and snps
div.data.sort <-div.data[with(div.data, order(Marker,Site)), ] #sort the diversity data by Marker then Site



#compares allelic richness linearly
library("ggplot2")
AR.mranvssnp.coef <- coef(lm(div.data.sort$AR[1:4]~div.data.sort$AR[5:8]))
AR.mranvssnp.cor.pval <- cor.test(div.data.sort$AR[1:4], div.data.sort$AR[5:8], 
                                  method='pearson', alternative = "greater", 
                                  exact = TRUE,conf.level = .95)
AR.mranvssnp.cor <- round(cor(div.data.sort$AR[1:4], div.data.sort$AR[5:8], 
                              method='pearson'), digits =3)



# Compare obs heterozygosity
Ho.mranvssnp.coef <- coef(lm(div.data.sort$Ho[1:4]~div.data.sort$Ho[5:8]))
Ho.mranvssnp.cor <- round(cor(div.data.sort$Ho[1:4], div.data.sort$Ho[5:8], 
                              method='pearson'), digits=3)
Ho.mranvssnp.cor.pval <- cor.test(div.data.sort$Ho[1:4], div.data.sort$Ho[5:8],
                                  method='pearson', alternative = "greater",
                                  exact = TRUE,conf.level = .95)



# Compare expected heterozygosity
He.mranvssnp.coef <- coef(lm(div.data.sort$He[1:4]~div.data.sort$He[5:8]))
He.mranvssnp.cor <- round(cor(div.data.sort$He[1:4], div.data.sort$He[5:8],
                              method='pearson'), digits = 3)
He.mranvssnp.cor.pval <-cor.test(div.data.sort$He[1:4], div.data.sort$He[5:8],
                                 method='pearson', alternative = "greater",
                                 exact = TRUE,conf.level = .95)



#compare FSTs
fst.msat <- as.data.frame(cbind("Comparison"=c("LAxAL",
                                                   "LAxGA",
                                                   "ALxGA",
                                                   "LAxFL",
                                                   "ALxFL",
                                                   "GAxFL"), #make column called "Comparison" with 6 values
                                    "FST"=c(na.omit(msat.fst)), #make column called "FST", convert FST values into vector, discard na's values, end up with 6 values
                                    "Marker"=c(rep("msats",6)))) #make column called "Marker" with 6 instances of "msats"
fst.msat$FST <- as.numeric(levels(fst.msat$FST)[fst.msat$FST]) #convert FST values from factor to numeric

fst.snp <- as.data.frame(cbind("Comparison"=c("ALxFL",
                                              "ALxGA",
                                              "GAxFL",
                                              "LAxAL",
                                              "LAxFL",
                                              "LAxGA"), #make column called "Comparison" with 6 values
                                "FST"=c(na.omit(as.vector(tort.fst$fst.pp))), #make column called "FST", convert FST values into vector, discard na's values, end up with 6 values
                                "Marker"=c(rep("snp",6)))) #make column called "Marker" with 6 instances of "snp"
fst.snp$FST <- as.numeric(levels(fst.snp$FST))[fst.snp$FST] #convert FST values from factor to numeric


fst.data = rbind(fst.msat, fst.snp) #combine the data



# do linear 1x1 comparisons of FST
fst.data.sort <- fst.data[with(fst.data, order(Marker,Comparison)), ] #sort the data by Marker then Comparison

fst.cor <- round(cor(fst.data.sort$FST[1:6], fst.data.sort$FST[7:12], 
                     method='pearson'), digits = 3) #compute the Pearson correlation coefficient for msat and snp data, round to 3 digits
fst.cor.pval <- cor.test(fst.data.sort$FST[1:6], fst.data.sort$FST[7:12], 
                         method='pearson', alternative = "greater",
                         exact = TRUE)



#compare PCAs
## SNPs - pop1=AL, pop2=FL, pop3=GA, pop4=LA
tort.snp.ids <- c(rep("AL",4), rep("FL",4), rep("GA",4), rep("LA",4)) #create the snp labels
tort.snp.pca.axis1.mean <- tortpca$ipca$li$Axis1 #get the X coordinates
tort.snp.pca.axis2.mean <- tortpca$ipca$li$Axis2 #get the Y coordinates

#create a dataframe so we can more easily plot the snp data
tort.snp.pca.df <- as.data.frame(cbind("x" = c(tort.snp.pca.axis1.mean), #append X coordinates as column "Axis1"
                                       "y" = c(tort.snp.pca.axis2.mean), #append Y coordinates as column "Axis2"
                                       "Site" = c(tort.snp.ids))) #append the site labels
tort.snp.pca.df$x <- as.numeric(levels(tort.snp.pca.df$x)[tort.snp.pca.df$x]) #convert Axis 1 to numeric
tort.snp.pca.df$y <- as.numeric(levels(tort.snp.pca.df$y)[tort.snp.pca.df$y]) #convert Axis 2 to numeric
tort.snp.pca.df <- tort.snp.pca.df[with(tort.snp.pca.df, order(Site)), ]



# MSATS - pop1=LA, pop2=AL, pop3=GA, pop4=FL
msat.ids <- gsub("SD", "AL",msat.ids)
msat.ids <- gsub("GG", "GA",msat.ids)

tort.msat.pca.df <- as.data.frame(cbind("x" = c(msat.pca$ipca$li$Axis1),
                                       "y" = c(msat.pca$ipca$li$Axis2),
                                       "Site" = c(msat.ids)))
tort.msat.pca.df$x <- as.numeric(levels(tort.msat.pca.df$x)[tort.msat.pca.df$x])
tort.msat.pca.df$y <- as.numeric(levels(tort.msat.pca.df$y)[tort.msat.pca.df$y])
tort.msat.pca.df <- tort.msat.pca.df[with(tort.msat.pca.df, order(Site)), ]
@

\maketitle
\pagebreak{}

\section*{Abstract}
Advances in genomic resources and next-generation sequencing have allowed researchers to access large panels of genetic markers such as single nucleotide polymorphisms (SNPs). These markers are replacing microsatellites for population genetic analyses, but it is not apparent how many SNPs are needed or how well SNPs correlate with microsatellite-derived estimates of genetic diversity, differentiation, or admixture. We used data from the gopher tortoise, \textit{Gopherus polyphemus}, to compare the utility of SNPs and microsatellites to estimate population genetic parameters. Specifically, we compared inferences from 101 tortoises from 4 populations previously genotyped at 10 microsatellite loci with 18,000 immune gene SNPs from 16 randomly sampled tortoises (4 per population). We found SNPs generally mirrored patterns inferred by microsatellites. Observed and expected heterozygosities, \textsc{Fst} values, and population admixture estimates were correlated between SNPs and microsatellites; however, allelic richness was not. We also found that the number of randomly chosen SNPs required to correlate with microsatellite-derived parameters varied depending on the question asked. In particular, 1,600, 800, or 100 randomly chosen SNPs were needed to correlate with microsatellite-estimates of observed heterozygosity, expected heterozygosity, or \textsc{Fst} values, respectively. Our study illustrates that estimates of population genetic parameters obtained with SNPs generally mirror those obtained with microsatellites. Moreover, the number of SNPs typically obtained from next-generation sequencing far exceeds the number of SNPs needed to obtain parameter estimates similar to those obtained with microsatellites. These findings suggest that results from recent studies using a large panel SNPs will be largely comparable to older studies using microsatellites.

\section*{Introduction}
Molecular markers vary in their utility and application to population genetic studies, and geneticists use available markers suited to answering questions at hand. Initially, geneticists only had allozymes and used them to infer nucleotide changes underlying differences in protein migration during electrophoresis. Later, variable mitochondrial DNA markers were used because of the availability of conserved primers and the high copy number of mitochondria, but mitochondrial markers mostly provided information on broad-scale genetic patterns \citep{Moritz_1994}. Presently, markers such as microsatellites are commonly used in population genetics because they are neutrally evolving, are spread across genomes, and can elucidate fine-scale spatial genetic patterns \citep[e.g.,][]{Clostio_et_al_2012}.

Genomic resources, hybridization arrays, fluorescent probes, and next-generation sequencing (NGS) have allowed researchers to access other types of genomic markers, and recently large arrays of single nucleotide polymorphisms (SNPs) have become particularly popular in population genetic studies of not only model but also non-model organisms \citep{Allendorf_et_al_2010}. SNPs are one of the most numerous molecular markers \citep{Gupta_et_al_2001}, and thousands to millions of them can be examined simultaneously using NGS techniques compared to dozens observed in traditional Sanger sequencing-based approaches. However, it is not apparent how population genetic inferences vary between thousands of NGS derived SNPs and traditional microsatellites markers. Prior research has shown that genetic differentiation and diversity are correlated between 7 di-allelic markers (SNPs and indels (insertions/deletions)) and 14 microsatellites in 21 \textit{Salmo salar} (Atlantic salmon) populations \citep{Ryynanen_et_al_2007}. Other studies have examined how microsatellite-derived population genetic parameters relate to fluorescent probe-assayed \citep[e.g.,][]{Narum_et_al_2008}, Sanger sequenced \citep[e.g.,][]{Coates_et_al_2009}, or array-assayed \citep[e.g.,][]{Glover_et_al_2010} SNP parameters, but little research has compared genetic inferences derived from thousands of NGS generated SNPs to inferences from microsatellites. As more and more studies utilize NGS data, a better understanding of this relationship is imperative because many current management and recovery plans currently in effect are based on genetic data from microsatellites.

We recently applied genomic approaches to the threatened \textit{Gopherus polyphemus} (gopher tortoise) to isolate genes involved in immune responses and better understand susceptibility to a chronic and occasionally fatal upper respiratory tract disease \citep{Elbers_and_Taylor_2015} caused by pathogens such as the bacteria \textit{Mycoplasma agassizii} \citep{Brown_et_al_1999}. In addition to being subject to epidemiology studies, \textit{G. polyphemus} populations have been examined genetically to infer population genetic diversity and differentiation and inform management decisions \citep[e.g.,][]{Schwartz_and_Karl_2005,Ennen_et_al_2010,Richter_et_al_2011,Clostio_et_al_2012}.

We use the NGS data leveraged in \citet{Elbers_and_Taylor_2015} and the microsatellite data obtained by \citet{Clostio_et_al_2012} to compare estimates of population genetic diversity, differentiation, and admixture derived from immune gene SNPs and microsatellites using samples from the same populations to better understand how NGS SNP inferences relate to those from microsatellites. We also subsample our SNPs to determine how many are needed to replace a given number of microsatellites for estimating genetic diversity and differentiation. We predict SNP inferences will mostly correlate with microsatellite inferences and that not all of the discovered SNPs will be needed to replace microsatellites for estimating diversity and differentiation.

\section*{Methods}
\subsection*{Samples}
For microsatellite analyses, we used 101 \textit{G. polyphemus} from 4 populations along an east to west gradient (Fig. 1, Table 1) that were previously genotyped at 10 microsatellite loci \citep{Clostio_et_al_2012}. For SNP analyses, we used a subset of 16 randomly chosen tortoises (4 per population) from the full subset of 101 tortoises.

\subsection*{Target region for sequencing SNPs}
We created a target region to capture the immunome (i.e., genes involved in immune response, \textit{sensu amplo} \citet{Ortutay_and_Vihinen_2006}) of \textit{Chrysemys picta bellii} (western painted turtle) using the GO2TR workflow \citep{Elbers_and_Taylor_2015}. The workflow filtered the \textit{C. p. bellii} 3.0.1 genome assembly \citep{Shaffer_et_al_2013} annotated by the NCBI Eukaryotic Genome Annotation Pipeline (annotation release 100) using the gene ontology term "immune response" (i.e., genes that function in the immune system's response to internal or invasive threats). Jean-Marie Rouillard of MYcroarray Inc. (Ann Arbor, MI, USA) generated 120-bp bait sequences with 60-bp overlap to capture our 1.4Mbp target region.

\subsection*{Library preparation and sequence capture}
We used biotinylated RNA baits from MYcroarray in an in-solution hybridization experiment to capture the immunomes of 16 \textit{G. polyphemus}. We created Illumina adaptor-ligated libraries using Agilent SureSelect XT2 Reagent Kits for the Illumina MiSeq (Agilent Technologies, Santa Clara, CA, USA), pooled 16 prepared libraries per capture reaction, and used MYcroarray reagents and protocols for sequence capture. We then sequenced post-capture amplification libraries on two Illumina MiSeq sequencer flow cells (i.e., all individuals sequenced twice) using 75-bp paired-end reads.

\subsection*{Read quality control and mapping}
We demultiplexed reads for each MiSeq run, allowing for up to one mismatch in the 8-bp barcode using \texttt{MiSeq Reporter} software. We used \texttt{TRIMMOMATIC} v0.32 \citep{Bolger_et_al_2014} default settings for adapter trimming, and for base quality filtering, we trimmed leading and trailing bases with quality scores less than 5 and 15, respectively. We also used sliding window scans to remove the 3' end of reads when average quality dropped below 15, and discarded reads with less than 40 bases. We next merged overlapping paired-ends reads with \texttt{BBMerge} v5.4 from the \texttt{BBMap} suite (\url{https://sourceforge.net/projects/bbmap/}) and then combined mateless single reads and merged paired reads for downstream analysis. Paired and single plus merged reads were first mapped separately to the \textit{C. p. bellii} 3.0.3 genome using the \texttt{BWA-MEM} algorithm \citep{Li_2013} implemented in \texttt{BWA} v0.7.12 \citep{Li_and_Durbin_2009}, and then less stringently using \texttt{STAMPY} v1.0.23 \citep{Lunter_and_Goodson_2011}. NCBI \texttt{remap} (\url{http://www.ncbi.nlm.nih.gov/genome/tools/remap}) was used to convert our bait intervals from \textit{C. p. bellii} 3.0.1 to \textit{C. p. bellii} 3.0.3 coordinates.

\subsection*{Variant and genotype calling}
Mapped reads were then processed using the \texttt{Genome Analysis Toolkit} v3.3.0 \citep[\texttt{GATK}]{McKenna_et_al_2010}, adhering to best practices for exome sequencing and calling variants such as SNPs with \texttt{GATK}'s \texttt{Haplotye Caller} and \texttt{Unified Genotyper}. Following variant calling, we used \texttt{PICARD}'s v1.128 (\url{http://broadinstitute.github.io/picard/}) \texttt{CalculateHSMetrics} to estimate sequencing metrics, and \texttt{featureCounts} \citep{Liao_et_al_2014} to estimate the number of genes and exons covered by each sample.

We then filtered variants to remove those with bad validation, low quality, low read depth, or low genotype quality to produce a high quality set of SNPs called by the \texttt{Unified Genotyper}. Next, we called variants from base-recalibrated BAM files using the \texttt{Haplotype Caller} and filtered variants in the same manner as before. We then looked for concordance between the two variant callers and used concordant SNPs for variant quality filtering of the \texttt{Haplotype Caller}'s call set. Finally, we used \texttt{BEAGLE} v4.0 r1398 \citep{Browning_and_Browning_2007} for genotype imputation on the variant-recalibrated SNP set.

\subsection*{Population genomic analyses}
For all population genomic analyses, we analyzed only di-allelic polymorphic SNP loci, as the tri- (n=758) and tetra-allelic (n=7) loci we obtained would influence SNP heterozygosity estimates. We used \texttt{VCFTOOLS} v0.1.12b \citep{Danecek_et_al_2011} to recalculate allele frequencies from our \texttt{Beagle}-imputated SNPs and then removed loci with allele frequencies of one. We then pruned SNP loci that were out of Hardy-Weinberg Equilibrium (HWE) or in Linkage Disequilibrium (LD) within each population using \texttt{VCFTOOLS}. We used the \texttt{p.adjust} function in \texttt{R} \citep{R_Core_Team} to correct \textit{P} values for HWE and LD tests using a false discovery rate \citep{Benjamini_and_Hochberg_1995} of 0.05. For genetic diversity analyses and all subsequent file conversions, we used \texttt{PGDSpider} v2.0.7.4 \citep{Lischer_and_Excoffier_2012} and the \texttt{R} package \texttt{hierfstat} v0.04-10 \citep{Goudet_2005} to assess observed and expected heterozygosity and allelic richness.

For population genomic differentiation, we estimated \textsc{Fst} values with \texttt{hierfstat}. For estimating admixture, we performed principle component analyses (PCA) with \texttt{hierfstat}, and we also assessed population admixture using \texttt{STRUCTURE} v2.3.4 \citep{Hubisz_et_al_2009,Pritchard_et_al_2000}. We ran \texttt{STRUCTURE} with 50,000 burnins and 100,000 replicates using correlated allele frequency and the admixture ancestry models from \textit{K}=1--5 with 10 replicates per \textit{K} value. We used \texttt{STRUCTURE HARVESTER} web v0.6.94 \citep{Earl_and_vonHoldt_2012} to select the best \textit{K} value and \texttt{CLUMPAK} web server \citep{Kopelman_et_al_2015} to average data from multiple runs and to visualize population assignments.

\subsection*{Microsatellite analyses}
We assessed HWE and LD for 10 microsatellite loci using \texttt{ARLEQUIN} v3.5 \citep{Excoffier_and_Lischer_2010}. Genetic diversity, differentiation, and admixture were estimated in the same manner as SNPs using \texttt{hierfstat} and \texttt{STRUCTURE}.

\subsection*{Random sampling of SNPs for power analysis}
We examined how many SNP loci would be needed to obtain \textit{P} values < 0.05 for Pearson's r correlation coefficient with our 10 microsatellite loci for heterozygosity and \textsc{Fst} values by randomly subsampling our 17,901 SNPs. We did not include allelic richness because SNP and microsatellites were not significantly correlated at 0.05 level. We randomly chose 10, 20, 40, 100, 200, 400, 800, 1,600, 3,200, 6,400, or 13,200 SNPs and calculated the \textit{P} value of the correlation coefficient 10 times for each sample size of SNP loci for observed and expected heterozygosity and \textsc{Fst}.

\section*{Results}
From two Illumina MiSeq sequencer runs, we obtained \Sexpr{round(x = seqMetrics[1,7]/1000000, digits = 1)} million reads that passed quality control and were assignable to individuals. Each tortoise had \Sexpr{round(x = seqMean(6)/1000000, digits = 1)} \begin{math}\pm\end{math} \Sexpr{round(x = seqSD(6)/1000000, digits = 1)} (mean \begin{math}\pm\end{math} standard deviation) million reads of which \Sexpr{round(x = seqMean(10)*100, digits = 1)} \begin{math}\pm\end{math} \Sexpr{round(x = seqSD(10)*100, digits = 1)} \% were unique (i.e., were not PCR duplicates), and \Sexpr{round(x = seqMean(12)*100, digits = 1)} \begin{math}\pm\end{math} \Sexpr{round(x = seqSD(12)*100, digits = 1)} \% of these unique reads could be aligned to our target region. Mean sample coverage over the entire target region was \Sexpr{round(x = seqMean(21), digits = 1)} \begin{math}\pm\end{math} \Sexpr{round(x = seqSD(21), digits = 1)} reads, and each sample had \Sexpr{round(x = seqMean(30)*100, digits = 1)} \begin{math}\pm\end{math} \Sexpr{round(x = seqSD(30)*100, digits = 1)} \% target bases with coverage greater than 20 reads (Fig. 2, Fig. 3). Only \Sexpr{round(x = seqMetrics[1,26]*100, digits = 1)} \% (\Sexpr{round(x = ((seqMetrics[1,26])*(seqMetrics[1,3]/1000)), digits = 1)} Kbp) of the \Sexpr{round(x = (seqMetrics[1,3]/1000000), digits = 1)} Mbp target region had coverage of less than 2 reads. Although our target region contained a total of \Sexpr{round(x = genes.possible2, digits = 1)} immune genes and \Sexpr{formatC(exons.possible2, format="d", big.mark=",")} exons, only \Sexpr{round(x = genes.covered2, digits = 1)} genes and \Sexpr{formatC(exons.covered2, format="d", big.mark=",")} exons were represented by usable reads. Each sample had reads for \Sexpr{round(x = genes2.mean, digits = 1)} \begin{math}\pm\end{math} \Sexpr{round(x = genes2.sd, digits = 1)} genes and \Sexpr{formatC(exons2.mean, format="d", big.mark=",")} \begin{math}\pm\end{math} \Sexpr{round(x = exons2.sd, digits = 1)} exons (mean \begin{math}\pm\end{math} standard deviation).

There were 17,901 di-allelic polymorphic SNP loci after filtering and imputation. None of these loci were out of HWE or in LD, but the lack of LD is unlikely given the close proximity of loci within the same exon and may have occurred because we had to correct \textit{P} values to account for thousands of multiple tests. Polymorphic SNPs were present in 491 immune genes (Table S1, Supporting information) and included broad classes such as histocompatibility and Toll-like receptor genes (Table 2).

SNP allelic richness was not posivitely correlated with values derived from microsatellites (Fig. 4A, Pearson's r = \Sexpr{round(x = AR.mranvssnp.cor, digits = 3)}, \textit{P} = \Sexpr{round(x = AR.mranvssnp.cor.pval$p.val, digits = 3)}); however, SNP and microsatellite observed (Fig. 4B, Pearson's r = \Sexpr{round(x = Ho.mranvssnp.cor, digits = 3)}, \textit{P} = \Sexpr{round(x = Ho.mranvssnp.cor.pval$p.val, digits = 3)}) and expected heterozygosities (Fig. 4C, Pearson's r = \Sexpr{round(x = He.mranvssnp.cor, digits = 3)}, \textit{P} = \Sexpr{round(x = He.mranvssnp.cor.pval$p.val, digits = 3)}) were highly correlated. The LA population followed by FL then GA and AL populations had the lowest to highest heterozygosity and allelic richness for SNPs. This suggests lower genetic diversity in the western LA population versus eastern FL, GA, and AL populations based on SNPs, a similar result to that obtained with microsatellites.

Pairwise \textsc{Fst} values were also positively correlated for SNP and microsatellite markers (Fig. 4D, Pearson's r = \Sexpr{round(x = fst.cor, digits = 3)}, \textit{P} = \Sexpr{round(x = fst.cor.pval$p.val, digits = 3)}). However, LA and AL had the lowest differentiation for SNPs compared to second lowest for microsatellites. This discrepancy was also apparent when comparing PCA results as LA and AL were the closest groups in the very tight clusters of the SNP PCA (Fig. 5A) but not for the looser clusters of microsatellite-derived PCA (Fig. 5B) where AL and GA clusters were closer together.

Population admixture inferred using SNPs suggested an optimum number of two clusters with \texttt{STRUCTURE}, the first consisting of AL, GA, and LA; the second with FL by itself (Fig. S1, Supporting information). For microsatellite-inferred admixture, there was an optimum of three clusters: the first with LA; the second with AL and GA; and the third with FL (Fig. S2, Supporting information). PCA analysis produced four clusters for SNPs (one for each population, Fig. 5A) and three clusters for microsatellites (the first with LA; the second with AL and GA; and the third with FL, Fig. 5B).

Random sampling of SNP loci showed that at least 1,600 SNPs were needed to obtain a significant correlation between SNP- and microsatellite-estimated observed heterozygosity (Fig. 6A). Nearly 800 SNPs were needed for expected heterozygosity (Fig. 6B), but only 100 SNPs were needed for SNP- and microsatellite-derived \textsc{Fst} values to be correlated (Fig. 6C). Variability decreased as the number of randomly chosen SNPs increased, especially after 100, 40, and 40 SNPs for observed heterozygosity, expected heterozygosity, and \textsc{Fst} values respectively (Fig. 6A-6C).

\section*{Discussion}
Here we sequenced the immunomes of 16 \textit{G. polyphemus} and compared genetic diversity, differentiation, and admixture derived from immunome gene SNPs and values derived from 10 microsatellites from the full set of 101 \textit{G. polyphemus}. We identified nearly 18,000 SNPs among several hundred immune response genes, and observed correlations between estimates of genetic diversity derived from immunome SNPs and microsatellites.

\subsection*{Genetic diversity}
Other studies have observed similar and contrasting correlations between SNP versus microsatellite-derived estimates of genetic diversity. For example, previous work using 7 SNPs/indels and 14 microsatellites found that expected heterozygosity and allelic richness are positively correlated between the two types of markers in Atlantic salmon populations \citep{Ryynanen_et_al_2007}. On the contrary, SNP(n=1--46) and microsatellite (n=10-27) heterozygosities are not correlated for European and North American wolf populations \citep{Vali_et_al_2008}. Likewise, microsatellite-estimated diversity is different between \textit{Bombus} bumble bee species, but similar when using restriction site-associated DNA sequencing (RADseq) loci \citep{Lozier_2014}, thus diversity estimates from these two markers are not correlated. Further, correlations may or may not exist depending on the diversity of microsatellites as these markers are poly-allelic, compared to SNPs which are typically di-allelic.

Previous work with microsatellites showed that genetic variation was lower in western versus eastern \textit{G. polyphemus} populations \citep{Ennen_et_al_2010}, and our results support this finding. However, because we only sampled a single western population (Fig. 1), it is not appropriate for us to generalize or label all western populations as genetically depauperate. Ultimately, additional sampling and immunome sequencing from other western \textit{G. polyphemus} populations is warranted.

Although similar, the rank order for allelic richness was not the same for immune gene SNPs and microsatellites. Similar observations have been made by other studies including those comparing SNPs and microsatellites in Atlantic salmon \citep{Ryynanen_et_al_2007}. Rank order may be skewed between the markers because microsatellites are poly-allelic while SNPs are di-allelic. Differences in rank order may also be caused by the manner in which allelic richness penalizes larger populations. For example, in a preliminary analysis, we incorrectly calculated allelic richness using the wrong population sizes (i.e., we made all populations equal to their original size) and actually found the rank order to be the same for both markers until we noticed the calculation error.

\subsection*{Genetic differentiation}
We also observed strong correlations between SNP and microsatellite-derived genetic differentiation, albeit the order of least to most differentiated comparisons varied. The same was observed for SNP- and microsatellite-derived \textsc{Fst} estimates from four populations of western corn rootworms \citep{Coates_et_al_2009}. The incongruence in rank order may have occurred in both scenarios because of homoplasy issues with microsatellites, where high mutation rates can cause repeat number to revert to a particular allele size, which can then inflate estimates of gene flow \citep{Coates_et_al_2009}.

\subsection*{Genetic admixture}
Population admixture assessments had few  inconsistencies between SNPs and microsatellites. Both PCAs suggested four clusters using either marker, but the PCAs varied in which populations were admixed. In particular, LA and AL were closer in the SNP PCA versus GA and FL for the microsatellite PCA. PCAs involving SNPs, expressed sequence tag microsatellites, and anonymous microsatellites among four populations of western corn rootworms found differences among markers in which populations were more closely clustered \citep{Coates_et_al_2009}. We also observed differences in \texttt{STRUCTURE} admixture results with the optimum number of clusters being 2 for SNPs and 3 for microsatellites. \citet{Morin_et_al_2012} compared 42 SNPs versus 22 microsatellites in bowhead whales and also found the optimum number of clusters is different when using \texttt{STRUCTURE} (optimum number of clusters is 3 for SNPs versus 2 for microsatellites).

\subsection*{Experimental design considerations}
So far, we have discussed how population genetic parameters estimated from immune gene SNPs mirror patterns estimated from microsatellite loci, but marker choice also depends on additional considerations such as cost, number of loci, computational issues with NGS generated SNPs, and neutral versus selective processes. First, although sequencing costs are decreasing, NGS techniques can be more expensive than microsatellites on a per sample basis depending on availability of equipment. In particular, the NGS technique used in this paper, in-solution hybridization, requires synthesis of expensive RNA baits/probes, in the order of several thousand dollars (USD). Although tagged microsatellite primers are not trivial in cost, they are far cheaper than biotinylated RNA baits. Further, most genetics labs are not equipped for NGS workflows that require specialized equipment, so lab work must either be outsourced to commercial or non-commercial core facilities.

The number of loci required to adequately address the genetic question at hand is also an important consideration when choosing between SNPs and microsatellites and will vary depending on the question being asked. In general, simulations suggest many more SNPs are needed than microsatellite loci when trying to achieve similar statistical power or parameter estimates. For example, simulations suggest between 60--100 SNP loci are needed for accurate parentage assignment \citep{Anderson_and_Garza_2006}, and empirical data from sockeye salmon suggest 80 SNPs have higher assignment success and are more accurate for parentage assignment than 11 microsatellites \citep{Hauser_et_al_2011}. Furthermore, a similar number of SNPs is needed for detecting low levels of divergence (i.e., \textsc{Fst} < 0.005) \citep{Morin_et_al_2009}. \citet{Ryynanen_et_al_2007} had significant correlations between 7 SNPs/indels and 14 microsatellite loci when estimating \textsc{Fst}. Our simulation results suggest at least 100 SNP loci are needed for correlating SNP and microsatellite-derived \textsc{Fst}. For heterozygosity, our data suggest more than 800 SNP loci are needed to correlate with 10 microsatellite loci, but \citet{Ryynanen_et_al_2007} only needed 7 SNP/indel loci to reach similar correlation levels possibly because they analyzed 21 populations. Acquiring data from a large number of SNPs is not a problem with NGS approaches, rather not all SNP loci are equally informative, and smaller SNP panels may occasionally perform well in comparison to much larger SNP arrays.

Computational issues with NGS are also not trivial, as our own NGS analysis relied on high performance computing resources and required many gigabytes of data storage. This does not include the time or expertise required to write code and scripts to analyze the gigabytes of raw data.

Neutral versus selective processes are also important to consider when deciding between SNPs and microsatellites. Markers such as microsatellites will be neutrally evolving while SNPs could represent both functional and neutral markers and be influenced by both neutral and adaptive processes. NGS generated SNPs are also to be appreciated because the sequences used to identify SNPs can represent functional, coding regions of the genome, which can provide information on the adaptive potential of populations to respond to environmental change \citep{Meyers_and_Bull_2002,van_Tienderen_et_al_2002}.

Many tests exist for ascertaining whether NGS generated sequences or SNPs are putatively under selection \citep[reviewed in][]{Vitti_et_al_2013}. In particular, SNP allele frequencies can vary among populations possibly due to selection acting on SNPs in one but not the other populations, and these different allele frequencies can influence genetic differentiation that can be approximated with Wright's fixation index (\textsc{Fst}). Several methods exist for detecting outlier SNPs that are putatively under selection, and these so-called outlier \textsc{Fst} tests have been reviewed in \citet{Narum_and_Hess_2011}.

\section*{Conclusion}
As more and more population genetic studies are publishing NGS generated SNPs as opposed to microsatellites, it would be useful to identify patterns between microsatellites and NGS derived SNPs and to appreciate the additional functional information commonly provided by SNPs. One apparent pattern is that high variation observed at microsatellites will likely translate into high SNP-estimates of genetic diversity \citep{Ryynanen_et_al_2007} and vice versa. Further, genetic diversity estimated by allelic richness between microsatellites and SNPs may be a less stable metric than diversity estimated by observed and/or expected heterozygosity because large populations are penalized by allelic richness and more alleles are present in microsatellites than SNPs. This does not mean allelic richness should be ignored especially for conservation purposes because some traits including disease resistance are associated with particular alleles \citep[e.g.,][]{Langefors_et_al_2001}, which is not accounted for by heterozygosity. Another important pattern likely to be observed between microsatellites and SNP studies is presence/absence of genetic structure, with any potential inconsistencies resulting from different evolutionary forces acting on the markers. The addition of adaptive processes acting on SNPs can then result in similar but disparate structure patterns between the two marker types. Finally, given the consistencies found between the two markers types here, we don't think it is necessary for researchers to replace older microsatellite data with NGS data as microsatellite-based management plans are probably still relevant.

\section*{Acknowledgements}
\noindent
We thank LSU and the LSU AgCenter for financial and logistical support. The Lucius Gilbert Foundation provided support for sequencing and for J.P.E. We are grateful to Richard Carmouche of Pennington Biomedical Research Center's Genomic Core Facility for performing next-generation sequencing laboratory work. This project/work used Genomics core facilities that are supported in part by COBRE (NIH 8 P20 GM103528) and NORC (NIH 2P30DK072476) center grants from the National Institutes of Health. We used LSU High Performance Computing resources to analyze next-generation sequencing data.

\singlespacing
\bibliography{references}
\bibliographystyle{molecularEcology}

\doublespacing
\section*{Data Accessibility}
\noindent
Raw sequencing data are available from the Sequence Read Archive (accession: SRP061247).
BAM and VCF files are available from Dryad repository (doi: ).
Detailed analytical methods and scripts to create Tables and Figures are available from \url{https://github.com/jelber2/immunome_2014}.

\section*{Author Contributions}
\noindent
J.P.E. designed the study and performed SNP analyses. R.W.C. performed microsatellite analyses. J.P.E. and S.S.T. wrote the paper.

\section*{Supporting Information}
\noindent
Additional Supporting Information may be found in the online version of this article:\\
\textbf{Table S1} All genes with di-allelic, polymorphic SNPs.\\
\textbf{Fig. S1} \texttt{STRUCTURE} plot for 17,901 immune gene SNPs with optimum number of clusters \textit{K} = 2 determined by \texttt{STRUCTURE HARVESTER}.\\
\textbf{Fig. S2} \texttt{STRUCTURE} plot for 10 microsatellites with optimum number of clusters \textit{K} = 3 determined by \texttt{STRUCTURE HARVESTER}.\\

\singlespacing
\section*{Tables and Figures}
\noindent
\textbf{Table 1} \textit{Gopherus polyphemus} sample descriptions.\\
\begin{tabular}{lllr}
\toprule
Site (Abbreviation)  &N  &Latitude  &Longitude \\
\midrule
Florida Gas Pipeline, Washington Parish, LA (LA)	& 36	& 30.78	& -90.00 \\
Solon Dixon, Andalusia, AL (AL)	& 20	& 31.16	& -86.70 \\
Jones Ecological Research Center, GA (GA)	& 26	& 31.23	& -84.47 \\
Private Site, Nassau County, FL (FL)	& 19	& 30.59	& -81.56 \\
\bottomrule
\end{tabular}

\pagebreak{}
\noindent
\textbf{Table 2} Histocompatibility and Toll-like Receptor Loci with di-allelic, polymorphic SNPs.\\
\begin{table}[ht]
\centering
\begin{tabular}{ll}
\hline
Histocompatibility Loci \\ 
\hline
CD74 molecule, major histocompatibility complex, class II invariant chain \\ 
Class I histocompatibility antigen, F10 alpha chain-like \\ 
Class II histocompatibility antigen, M alpha chain \\ 
Class II, major histocompatibility complex, transactivator \\ 
DLA class II histocompatibility antigen, DR-1 beta chain-like \\ 
H-2 class II histocompatibility antigen, A-R alpha chain-like \\ 
H-2 class II histocompatibility antigen, E-S beta chain-like \\ 
HLA class II histocompatibility antigen, DP alpha 1 chain-like \\ 
HLA class II histocompatibility antigen, DR alpha chain-like \\ 
HLA class II histocompatibility antigen, DR beta 5 chain-like \\ 
HLA class II histocompatibility antigen, DRB1-15 beta chain-like \\ 
Major histocompatibility complex class I-related gene protein-like \\ 
Rano class II histocompatibility antigen, A beta chain-like \\ 
\hline
Toll-like Receptor Loci \\
\hline
Toll-like Receptor 13 \\ 
Toll-like Receptor 2 \\ 
Toll-like Receptor 7 \\ 
Toll-like Receptor 8 \\ 
Toll-like Receptor adaptor molecule 1 \\ 
Toll-like Receptor adaptor molecule 2 \\ 
\hline
\end{tabular}
\end{table}

\pagebreak{}
\noindent
\includegraphics [scale=1.0]{range_map}
\noindent
\textbf{Fig. 1} \textit{Gopherus polyphemus} range map and sampling sites. Range of western \textit{G. polyphemus} populations darkly shaded on the left with eastern populations lightly shaded on the right.\\

\pagebreak{}
\noindent
<<Figure-2, echo=FALSE>>=
#Figure 2

# Create plot area, but do not plot anything. Add gridlines and axis labels.
plot(cov1[[1]][2:201, 2],
     cov_cumul1[[1]][1:200],
     type='n',
     xlab="Depth",
     ylab="Fraction of capture target bases > depth",
     ylim=c(0,1.0))
abline(v = 20, col = "gray60")
abline(v = 50, col = "gray60")
abline(v = 80, col = "gray60")
abline(v = 100, col = "gray60")
abline(h = 0.50, col = "gray60")
abline(h = 0.90, col = "gray60")
axis(1, at=c(20,50,80), labels=c(20,50,80))
axis(2, at=c(0.90), labels=c(0.90))
axis(2, at=c(0.50), labels=c(0.50))

# Actually plot the data for each of the alignments (stored in the lists).
for (i in 1:length(cov1)) points(cov1[[i]][2:201, 2],
                                cov_cumul1[[i]][1:200], type='l', lwd=3, col=cols1[i])

# Add a legend using the nice sample labeles rather than the full filenames.
legend("topright", legend=labs1, col=cols1, lty=1, lwd=4)
@
\noindent
\textbf{Fig. 2} Coverage plots for first eight samples showing number of sequencing reads at or above specified proportions. A value at 100 Depth and 0.5 fraction means 50 percent of bases were at or above 100X coverage.\\


\pagebreak{}
\noindent
<<Figure-3, echo=FALSE>>=
# figure 3
# Create plot area, but do not plot anything. Add gridlines and axis labels.
plot(cov2[[1]][2:201, 2],
     cov_cumul2[[1]][1:200],
     type='n',
     xlab="Depth",
     ylab="Fraction of capture target bases > depth",
     ylim=c(0,1.0))
abline(v = 20, col = "gray60")
abline(v = 50, col = "gray60")
abline(v = 80, col = "gray60")
abline(v = 100, col = "gray60")
abline(h = 0.50, col = "gray60")
abline(h = 0.90, col = "gray60")
axis(1, at=c(20,50,80), labels=c(20,50,80))
axis(2, at=c(0.90), labels=c(0.90))
axis(2, at=c(0.50), labels=c(0.50))

# Actually plot the data for each of the alignments (stored in the lists).
for (i in 1:length(cov2)) points(cov2[[i]][2:201, 2],
                                 cov_cumul2[[i]][1:200], type='l', lwd=3, col=cols2[i])

# Add a legend using the nice sample labeles rather than the full filenames.
legend("topright", legend=labs2, col=cols2, lty=1, lwd=4)
@
\noindent
\textbf{Fig. 3} Coverage plots for last eight samples showing number of sequencing reads at or above specified proportions.\\


\pagebreak{}
\noindent
<<Figure-4, echo=FALSE>>=
#Allelic richness
AR.mranvssnp.plot <- qplot(AR[1:4], AR[5:8], data = div.data.sort) +
  stat_smooth(method="lm", se=FALSE, color="black") +
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  xlab(expression(paste("A", scriptstyle("R"), " microsatellites"))) + 
  ylab(expression(paste("A", scriptstyle("R"), " SNPs"))) + 
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) + 
  geom_text(label = div.data.sort$Site, hjust=1, vjust=1) +
  expand_limits(x = 3) +
  expand_limits(y = 1.425) +
  annotate("text", label = "(A)", x = 3.25, y = 1.625, size = 7, colour = "black")

#Observed Heterozygosity
Ho.mranvssnp.plot <- qplot(Ho[1:4], Ho[5:8], data = div.data.sort) +
  stat_smooth(method="lm", se=FALSE, color = "black") +
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  xlab(expression(paste("H", scriptstyle("O"), " microsatellites"))) + 
  ylab(expression(paste("H", scriptstyle("O"), " SNPs"))) + 
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  geom_text(label = div.data.sort$Site, hjust=1, vjust=1) +
  expand_limits(y = 0.21) +
  expand_limits(x = 0.3) +
  annotate("text", label = "(B)", x = 0.325, y = 0.3, size = 7, colour = "black")

#Expected Heterozygosity
He.mranvssnp.plot <- qplot(He[1:4], He[5:8], data = div.data.sort) +
  stat_smooth(method="lm", se=FALSE, color="black") +
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  xlab(expression(paste("H", scriptstyle("E"), " microsatellites"))) + 
  ylab(expression(paste("H", scriptstyle("E"), " SNPs"))) + 
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  geom_text(label = div.data.sort$Site, hjust=1, vjust=1) +
  expand_limits(y = 0.18) +
  expand_limits(x = 0.35) +
  annotate("text", label = "(C)", x = 0.365, y = 0.26, size = 7, colour = "black")

#Fst
fst.cor.plot <- qplot(FST[1:6], FST[7:12], data = fst.data.sort) + #add layers to the plot
  stat_smooth(method="lm", se=FALSE, color="black") + #add a best fit line
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  xlab(expression(paste("F", scriptstyle("ST"), " microsatellites"))) + 
  ylab(expression(paste("F", scriptstyle("ST"), " SNPs"))) + 
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  geom_text(label = fst.data.sort$Comparison, hjust=1, vjust=1) +
  expand_limits(y = 0.1) +
  expand_limits(x = 0.05) +
  annotate("text", label = "(D)", x = 0.075, y = 0.425, size = 7, colour = "black")

#Define multiplot function from:
# http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_%28ggplot2%29/
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)

  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

 if (numPlots==1) {
    print(plots[[1]])

  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

#graph figures 4a-4d plots
multiplot(AR.mranvssnp.plot,
          He.mranvssnp.plot,
          Ho.mranvssnp.plot,
          fst.cor.plot,
          cols = 2)
@
\noindent
\textbf{Fig. 4} (A) Allelic richness, (B) observed heterozygosity, (C) expected heterozygosity, and (D) \textsc{Fst} comparison between 10 microsatellites and 17,901 immune gene SNPs. \textsc{Ar} for allelic richness, \textsc{Ho} for observed heterozygosity, \textsc{He} for expected heterozygosity. \\


\pagebreak{}
\noindent
<<Figure-5, echo=FALSE>>=
library("ellipse")
# make two ellipse shapes
df.ell1 <- as.data.frame(ellipse(0.001, scale = c(50,50), centre = c(-25,-25)))
df.ell1$Site <- c(rep("site", 100))
df.ell2 <- as.data.frame(ellipse(0.001, scale = c(5,5), centre = c(135,35)))
df.ell2$Site <- c(rep("site", 100))

#plot the snp data
snp.pca.plot <-ggplot(tort.snp.pca.df, aes(x, y, group=Site)) + #set the dataset as tort.snp.pca.df, X=x, Y=y, by Site
  geom_point(aes(colour = Site)) + #color the points by Site
  theme_bw() + #make the theme black and white
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), #make the border solid black
        panel.grid.major = element_blank(), #make major grid blank
        panel.grid.minor = element_blank()) +   #make minor grid blank
  xlab("Axis1") + #change the X axis label
  ylab("Axis2") + #change the Y axis label
  theme(axis.text = element_text(size = rel(1.2))) + #change the size of the axis text
  theme(axis.title = element_text(size = rel(1.4))) +#change the size of the axis title
  geom_path(data=df.ell1) + geom_path(data=df.ell2) + 
  annotate("text", label = "(A)", x = -145, y = 95, size = 7, colour = "black")

#msat pca plot
df.ell3 <- as.data.frame(ellipse(-0.5, scale = c(1,0.9), centre = c(-2.7,2.2)))
df.ell3$Site <- c(rep("site", 100))
df.ell4 <- as.data.frame(ellipse(0.6, scale = c(1,1), centre = c(5,2.5)))
df.ell4$Site <- c(rep("site", 100))
df.ell5 <- as.data.frame(ellipse(-0.6, scale = c(1.2,1.1), centre = c(0.5,-2.9)))
df.ell5$Site <- c(rep("site", 100))


msat.pca.plot <-ggplot(tort.msat.pca.df, aes(x, y, group=Site)) + 
  geom_point(aes(colour = Site)) + 
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  xlab("Axis1") + 
  ylab("Axis2") + 
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  geom_path(data=df.ell3) + geom_path(data=df.ell4) + geom_path(data=df.ell5) +
  annotate("text", label = "(B)", x = -5.0, y = 4.75, size = 7, colour = "black")

multiplot(snp.pca.plot, msat.pca.plot, cols = 1)
@
\noindent
\textbf{Fig. 5} Principle component analysis for (A) 17,901 immune gene SNPs and (B) 10 microsatellites. Circles indicate optimum clusters indentified using \texttt{STRUCTURE} and \texttt{STRUCTURE HARVESTER}.\\

\pagebreak{}
\noindent
<<Figure-6, echo=FALSE>>=
#Observed het
Ho <- ggplot(df4.snps, aes(reorder(Size, Num), Ho)) +
  geom_boxplot() + 
  geom_hline(aes(yintercept=0.05), colour="#990000", linetype="dashed") +
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  ylab("") + 
  xlab(expression(paste("Number of randomly chosen SNPs - H", scriptstyle("O")))) +
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  annotate("text", label = "(A)", x = 11, y = 0.7, size = 7, colour = "black")


# Expected het
He <- ggplot(df4.snps, aes(reorder(Size, Num), He)) +
  geom_boxplot() + 
  geom_hline(aes(yintercept=0.05), colour="#990000", linetype="dashed") +
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  ylab(expression(paste("Pearson's r ",italic("P"), " value"))) +
  xlab(expression(paste("Number of randomly chosen SNPs - H", scriptstyle("E")))) +
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  annotate("text", label = "(B)", x = 11, y = 0.775, size = 7, colour = "black")

# Fst
Fst <- ggplot(df4.snps, aes(reorder(Size, Num), Fst)) +
  geom_boxplot() + 
  geom_hline(aes(yintercept=0.05), colour="#990000", linetype="dashed") +
  theme_bw() + 
  theme(panel.border = element_rect(linetype = "solid", colour = "black"), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +  
  ylab("") +
  xlab(expression(paste("Number of randomly chosen SNPs - F", scriptstyle("ST")))) +
  theme(axis.text = element_text(size = rel(1.2))) + 
  theme(axis.title = element_text(size = rel(1.4))) +
  annotate("text", label = "(C)", x = 11, y = 0.575, size = 7, colour = "black")


multiplot(Ho, He, Fst, cols = 1)
@
\noindent
\textbf{Fig. 6} Power analysis showing how many randomly sampled SNP loci are needed in comparison to 10 microsatellite loci for Pearon's r correlation coefficient to be significant at 0.05 level (dotted line) for (A) observed heterozygosity, (B) expected heterozygosity, and (C) \textsc{Fst}. There were 10 simulations for each size class of SNPs. \textsc{Ho} for observed heterozygosity, \textsc{He} for expected heterozygosity.\\

\end{document}